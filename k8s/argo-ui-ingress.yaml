# IngressRoute to expose the Argo Workflows UI (argo-server) on a k3d/k3s cluster via Traefik
# Usage:
#   kubectl apply -f k8s/argo-ui-ingress.yaml
# Then open: http://argo.localtest.me:8281
#
# Notes:
# - Namespace is "argo" to match install-argo.sh default (ARGO_NS)
# - argo-server serves HTTPS on 2746 with a self-signed cert
# - We explicitly use Traefik IngressRoute + ServersTransport to talk HTTPS upstream and skip TLS verification
# - If you prefer a different host, edit the Host(`...`) match below, or run scripts/config-argo-ingress.sh with ARGO_INGRESS_HOST

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: argo-server
  namespace: argo
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`argo.localtest.me`)
      kind: Rule
      services:
        - name: argo-server
          port: 2746
          scheme: https
          serversTransport: argo-server-transport
---
# Traefik CRD to skip TLS verification for argo-server upstream (local dev only!)
apiVersion: traefik.io/v1alpha1
kind: ServersTransport
metadata:
  name: argo-server-transport
  namespace: argo
spec:
  insecureSkipVerify: true
